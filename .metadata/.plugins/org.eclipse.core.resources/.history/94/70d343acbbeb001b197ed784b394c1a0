// ---------------------------------------------------------------------------------
//   File        :project.h
//   Version     :v1.0.1
//   Date        :2011/02/17
//   Author      :nbk
//   Description :
// ---------------------------------------------------------------------------------

#ifndef __PROJECT_H___
#define __PROJECT_H___


#define RobotNumber			2
#include <stdio.h>
#include <math.h>

#define FALSE		0
#define TRUE		1

#define MHZ						1000000L
#define dT	0.001f
#define TICK_PERIOD	(int)(dT*MHZ)
#define TICK_FREQ	(int)(1/dT+0.5f)
// ---------------------------------------------------------------------------------
// Data type definition
// ---------------------------------------------------------------------------------
typedef void (*type_fp) (void);

// -------------------------------------------------------------------------------
//  Macros
// ---------------------------------------------------------------------------------

#define DI			__disable_irq()
#define EI			__enable_irq()
#define ABS(n)		((n)>=0?(n):(-n))		// Get absolute value
#define CLIP(n, min, max)	((n)=(n)>(max)?(max):((n)<(min)?(min):(n)))

#define LimitPI(a)		((a)>(M_PI)?(a-2*M_PI):((a)<(-M_PI)?((a)+2*M_PI):(a)))
#define DEG_RAD(a)		(((a)*M_PI)/180)
#define DEG01_RAD(a)	(((a)*M_PI)/1800)
#define RAD_DEG(a)		(((a)*180)/M_PI)
#define RAD_DEG01(a)	(((a)*1800)/M_PI)
#define Limit1800Deg(a)	( ((a)>1800) ? (-3600+(a)) : ( (a)<-1800 ? (3600+(a)) : (a) ) )


// IO pins definition. These macros make it easier to write & modify your program
#define LED0_PIN		GPIOB,GPIO_Pin_7
#define LED1_PIN		GPIOA,GPIO_Pin_13


#define LMOTORDIR_PIN	GPIOB, GPIO_Pin_10
#define RMOTORDIR_PIN	GPIOA, GPIO_Pin_12


// ---------------------------------------------------------------------------------
//  Global variables
// ---------------------------------------------------------------------------------

extern char s[80];


// ---------------------------------------------------------------------------------
//  Function prototypes
// ---------------------------------------------------------------------------------


/* Motor related routines (motor.c) */
void InitMotor(void);		/* motor initialisation */
void UpdateWheelPos();
void InitMotorData();
void PrintMotorValues(void);
void PrintLog();
void ClearLog();
void TestMotorMenu();

int PutChar(int c);
int GetChar(void);
void gotoxy(int x, int y);
void clrscr(void);
int8_t kbhit();
int RxChar(USART_TypeDef* usart);
int TxChar(USART_TypeDef* usart, char c);
int RxCharISR(int16_t uartNum);
int TxCharISR(int16_t uartNum, char c);
int8_t RxCharAvailableISR(int16_t uartNum);

#endif
